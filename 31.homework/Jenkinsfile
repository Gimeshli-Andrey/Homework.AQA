pipeline {
    agent any

    environment {
        PROJECT_DIR = '31.homework'
        VENV_NAME = 'venv'
        VENV_PATH = "${WORKSPACE}/${PROJECT_DIR}/${VENV_NAME}"
        REQUIREMENTS_FILE = "${WORKSPACE}/${PROJECT_DIR}/requirements.txt"
    }

    stages {
        stage('Checkout') {
            steps {
                echo "Клонирование кода из репозитория..."
                git branch: 'main', url: 'https://github.com/Gimeshli-Andrey/Homework.AQA.git'
            }
        }

        stage('Create virtual environment') {
            steps {
                echo "Создание виртуального окружения..."
                sh '''
                    #!/bin/bash
                    python3 -m venv ${VENV_PATH}
                '''
            }
        }

        stage('Install dependencies') {
            steps {
                script {
                    echo "Активируем виртуальное окружение и устанавливаем зависимости..."
                    sh '''
                        #!/bin/bash
                        # Активируем виртуальное окружение
                        . ${VENV_PATH}/bin/activate
                        # Обновляем pip
                        pip install --upgrade pip
                        # Проверяем наличие requirements.txt и устанавливаем зависимости
                        if [ -f ${REQUIREMENTS_FILE} ]; then
                            pip install --no-cache-dir -r ${REQUIREMENTS_FILE}
                        else
                            echo "requirements.txt не найден!"
                        fi
                    '''
                }
            }
        }

        stage('Run tests') {
            steps {
                script {
                    echo "Запуск тестов из test_app.py..."
                    sh '''
                        #!/bin/bash
                        # Активируем виртуальное окружение
                        . ${VENV_PATH}/bin/activate
                        pytest ${WORKSPACE}/${PROJECT_DIR}/tests/test_app.py --alluredir=${WORKSPACE}/${PROJECT_DIR}/allure-results
                    '''
                }
            }
        }
    }

    post {
        always {
            echo "Публикуем результаты тестов и отчет Allure..."
            allure includeProperties: false, results: [[path: "${WORKSPACE}/${PROJECT_DIR}/allure-results"]]
        }
        success {
            echo "Пайплайн завершен успешно."
        }
        failure {
            echo "Пайплайн завершен с ошибкой."
        }
    }
}