pipeline {
    agent {
        docker {
            filename 'Dockerfile'
            args '-v $PWD:/app'
        }
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                    python3 -m pip install --upgrade pip
                    python3 -m pip install -r requirements.txt
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                    python3 -m pytest --alluredir=allure-results --disable-warnings
                '''
            }
            post {
                always {
                    junit 'test-results/*.xml'
                }
            }
        }

        stage('Publish Test Results') {
            steps {
                allure([
                    includeProperties: false,
                    reportBuildPolicy: 'ALWAYS',
                    results: [[path: 'allure-results']]
                ])
            }
        }
    }

    post {
        always {
            emailext (
                to: 'InsertYour@Mail.Here',
                subject: "Build ${currentBuild.currentResult}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: """
                    <p>Статус сборки: ${currentBuild.currentResult}</p>
                    <p>Номер сборки: ${env.BUILD_NUMBER}</p>
                    <p>Просмотреть результаты: ${env.BUILD_URL}</p>
                    <p>Отчет тестирования Allure: ${env.BUILD_URL}allure</p>
                """,
                mimeType: 'text/html',
                attachLog: true
            )
        }
        cleanup {
            deleteDir()
        }
    }
}
