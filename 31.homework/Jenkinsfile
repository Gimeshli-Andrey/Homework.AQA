pipeline {
    agent any

    environment {
        PROJECT_DIR = '31.homework'
        VENV_NAME = 'venv'
        VENV_PATH = "${PROJECT_DIR}/${VENV_NAME}"
        VENV_ACTIVATE_PATH = "${PROJECT_DIR}/venv/bin/activate"
    }

    stages {
        stage('Checkout') {
            steps {
                echo "Клонирование кода из репозитория..."
                git branch: 'main', url: 'https://github.com/Gimeshli-Andrey/Homework.AQA.git'
            }
        }

        stage('Install dependencies') {
            steps {
                sh '''#!/bin/bash
                    echo "Обновление пакетов и установка зависимостей..."
                    apt-get update
                    apt-get install -y python3 python3-dev python3-pip python3.11-venv
                    rm -rf ${VENV_PATH}
                    echo "Создание виртуального окружения..."
                    python3 -m venv ${VENV_PATH}
                    echo "Содержимое каталога ${VENV_PATH}:"
                    ls -l ${VENV_PATH}
                '''
            }
        }

        stage('Install requirements') {
            steps {
                sh '''#!/bin/bash
                    if [ ! -d "${VENV_PATH}" ]; then
                        echo "Ошибка: виртуальное окружение не найдено!"
                        exit 1
                    fi
                    if [ ! -f "${VENV_PATH}/bin/activate" ]; then
                        echo "Ошибка: файл activate не найден!"
                        exit 1
                    fi
                    echo "Активируем виртуальное окружение и устанавливаем зависимости..."
                    bash -c "source ${VENV_ACTIVATE_PATH} && pip install --no-cache-dir -r ${PROJECT_DIR}/requirements.txt"
                    bash -c "source ${VENV_ACTIVATE_PATH} && pip freeze"  # Вывод установленных пакетов
                '''
            }
        }

        stage('Run tests') {
            steps {
                sh '''#!/bin/bash
                    echo "Проверка содержимого каталога tests..."
                    ls -l ${PROJECT_DIR}/tests/

                    echo "Запуск тестов..."
                    bash -c "source ${VENV_ACTIVATE_PATH} && pytest ${PROJECT_DIR}/tests --alluredir=${PROJECT_DIR}/allure-results"
                '''
            }
        }
    }

    post {
        always {
            echo "Публикуем результаты тестов и отчет Allure..."
            allure([
                includeProperties: false,
                results: [[path: "${env.PROJECT_DIR}/allure-results"]]
            ])
        }
        success {
            echo "Пайплайн завершен успешно."
        }
        failure {
            echo "Пайплайн завершен с ошибкой."
        }
    }
}
