pipeline {
    agent any

    environment {
        EMAIL_RECIPIENT = 'gimeshli.a@gmail.com'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/Gimeshli-Andrey/Homework.AQA.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('31.homework') {
                    sh 'pip install -r requirements.txt'
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('31.homework') {
                    sh 'docker-compose run --rm app pytest tests/test_database.py --maxfail=5 --disable-warnings -v --junitxml=allure-results/test-results.xml'
                }
            }
            post {
                always {
                    junit '31.homework/allure-results/test-results.xml'
                }
            }
        }

        stage('Generate Allure Report') {
            steps {
                dir('31.homework') {
                    script {
                        allure([
                            includeProperties: false,
                            reportBuildPolicy: 'ALWAYS',
                            results: [[path: 'allure-results']]
                        ])
                    }
                }
            }
        }
    }

    post {
        always {
            emailext (
                to: "${EMAIL_RECIPIENT}",
                subject: "Build ${currentBuild.currentResult}: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                body: """
                    <p>Статус: ${currentBuild.currentResult}</p>
                    <p>Номер збірки: ${env.BUILD_NUMBER}</p>
                    <p>URL збірки: ${env.BUILD_URL}</p>
                """,
                mimeType: 'text/html',
                attachLog: true
            )
        }

        cleanup {
            deleteDir()
        }

        failure {
            script {
                echo "КРИТИЧНО: Збірка не вдалася."
            }
        }
    }
}